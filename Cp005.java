package io.testproject.generated.tests.myfirstproject;

import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

/**
 * This class was automatically generated by TestProject
 * Project: My first Project
 * Test: CP005
 * Generated by: Channyke Rodriguez (csrodriguez21@ucatolica.edu.co)
 * Generated on Wed Oct 13 00:36:09 GMT 2021.
 */
@DisplayName("CP005")
public class Cp005 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("Dl_CRrVGkr6XQ2tp-Eg4dJ3yWlOTRQ7XPZwrxjLFM_0", new ChromeOptions(), "Channyke Rodriguez");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("CP005")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String Idtarea, String Prioridad) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    WebExtensions.SelectOptionByValue selectOptionByValue;

    // 1. Navigate to '{{ApplicationURL}}'
    //    Navigates the specified URL (Auto-generated)
    GeneratedUtils.sleep(500);
    driver.navigate().to(ApplicationURL);

    // 2. Scroll window by ('0','62')
    GeneratedUtils.sleep(500);
    ((JavascriptExecutor)driver).executeScript("window.scrollBy(0,62)","");

    // 3. Click 'user'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#user");
    driver.findElement(by).click();

    // 4. Type 'jdme1' in 'user'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#user");
    driver.findElement(by).sendKeys("jdme1");

    // 5. Click 'password'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#password");
    driver.findElement(by).click();

    // 6. Type 'lindo123!' in 'password'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#password");
    driver.findElement(by).sendKeys("lindo123!");

    // 7. Click 'Log in'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ingresar");
    driver.findElement(by).click();

    // 8. Scroll window by ('0','400')
    GeneratedUtils.sleep(500);
    ((JavascriptExecutor)driver).executeScript("window.scrollBy(0,400)","");

    // 9. Navigate to 'http://localhost/ActiveTime/assets/pages/Agregar-Tarea/index2.html'
    GeneratedUtils.sleep(500);
    driver.navigate().to("http://localhost/ActiveTime/assets/pages/Agregar-Tarea/index2.html");

    // 10. Scroll window by ('0','399')
    GeneratedUtils.sleep(500);
    ((JavascriptExecutor)driver).executeScript("window.scrollBy(0,399)","");

    // 11. Click 'Change Priority'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#changePriority");
    driver.findElement(by).click();

    // 12. Click 'task1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#idTask");
    driver.findElement(by).click();

    // 13. Type '{{Idtarea}}' in 'task1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#idTask");
    driver.findElement(by).sendKeys(Idtarea);

    // 14. Click 'priority'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#priority");
    driver.findElement(by).click();

    // 15. Select all '{{Prioridad}}' options in 'priority'
    GeneratedUtils.sleep(500);
    selectOptionByValue = WebExtensions.selectOptionByValue(Prioridad);
    by = By.cssSelector("#priority");
    selectOptionByValue = (WebExtensions.SelectOptionByValue)((ReportingDriver)driver).addons().execute(selectOptionByValue, by, -1);

    // 16. Click 'priority'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#priority");
    driver.findElement(by).click();

    // 17. Click 'Change'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#change-task");
    driver.findElement(by).click();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("http://localhost/ActiveTime/","25","3"));
  }
}
